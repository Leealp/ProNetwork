{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\AlphaLy\\\\Desktop\\\\SMU-coding-bootcamp\\\\work\\\\Project_3\\\\ProNetwork\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\AlphaLy\\\\Desktop\\\\SMU-coding-bootcamp\\\\work\\\\Project_3\\\\ProNetwork\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\AlphaLy\\\\Desktop\\\\SMU-coding-bootcamp\\\\work\\\\Project_3\\\\ProNetwork\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nconst Login = ({\n  login\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const email = formData.email,\n        password = formData.password;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  })); //in setFormData we want to change the state\n\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), \"Sign Into Your Account\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Don't have an account? \", React.createElement(Link, {\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Sign Up\")));\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired // isAuthenticated: PropTypes.bool\n\n};\nexport default connect(null, {\n  login\n})(Login);","map":{"version":3,"sources":["C:\\Users\\AlphaLy\\Desktop\\SMU-coding-bootcamp\\work\\Project_3\\ProNetwork\\client\\src\\components\\auth\\Login.js"],"names":["React","Fragment","useState","Link","connect","PropTypes","login","Login","email","password","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login }) => {\r\n  const [formData, setFormData] = useState({\r\n      email: '',\r\n      password: ''\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = e => \r\n    setFormData({ ...formData, [e.target.name]: e.target.value });      //in setFormData we want to change the state\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        login(email, password);\r\n    };\r\n\r\n  return( \r\n  <Fragment>\r\n       <h1 className=\"large text-primary\">Sign In</h1>\r\n       <p className=\"lead\">\r\n          <i className=\"fas fa-user\"/>Sign Into Your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input \r\n            type=\"email\" \r\n            placeholder=\"Email Address\" \r\n            name=\"email\" \r\n            value={email}\r\n            onChange={e => onChange(e)} \r\n            required \r\n            />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n      </p>\r\n  </Fragment>\r\n  )\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  // isAuthenticated: PropTypes.bool\r\n};\r\n\r\nexport default connect(null, {login}) (Login);\r\n"]},"metadata":{},"sourceType":"module"}